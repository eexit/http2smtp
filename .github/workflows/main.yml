name: build
on:
  push:
    branches: [ master ]
    tags: [ 'v[0-9]+.[0-9]+.[0-9]+*' ]
  pull_request:
    branches: [ master ]
jobs:
  tests:
    name: Unit tests + coverage
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Get dependencies
      run: go get -v -t -d ./...
    - name: Build
      run: go build -v ./...
    - name: Test with coverage
      run: go test -v ./... -coverprofile=coverage.txt -covermode=atomic
    - name: Upload coverage report
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.txt
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
  lint:
    name: Go linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.34
  publish:
    # Only when there's a tag
    if: contains(github.ref, 'refs/tags/')
    name: Docker publish
    runs-on: ubuntu-latest
    needs: [ tests, lint ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set output
        id: tagref
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          build-args: version=${{ steps.tagref.outputs.tag }}
          tag: ${{ steps.tagref.outputs.tag }}
