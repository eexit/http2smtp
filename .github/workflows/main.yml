name: build
on:
  push:
    branches: [ master ]
    tags: [ 'v[0-9]+.[0-9]+.[0-9]+*' ]
  pull_request:
jobs:
  tests:
    name: Unit tests + coverage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
    - name: Get dependencies
      run: go get -v -t -d ./...
    - name: Build
      run: go build -v ./...
    - name: Test with coverage
      run: go test -mod=readonly -v ./... -coverprofile=coverage.txt -covermode=atomic
    - name: Upload coverage report
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.txt
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
  lint:
    name: Go linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Lint the codebase
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.34
  publish:
    name: Docker publish
    if: contains(github.ref, 'refs/tags/')
    needs: [ tests, lint ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Retrieve tag
        id: tagref
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          build-args: version=${{ steps.tagref.outputs.tag }}+${{ github.sha }}
          tags: '${{ github.repository }}:${{ steps.tagref.outputs.tag }},${{ github.repository }}:latest'
          push: true
      - name: Update repo description
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ github.repository }}
  release-bin:
    name: Release binaries
    if: contains(github.ref, 'refs/tags/')
    needs: [ tests, lint ]
    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: 0
    strategy:
      matrix:
        target: [http2smtp, http2smtp-lambda]
    steps:
      - uses: actions/checkout@v2
      - name: Retrieve tag
        id: tagref
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - uses: wangyoucao577/go-release-action@v1.11
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          goos: linux
          goarch: amd64
          goversion: '1.15'
          project_path: cmd/${{ matrix.target }}
          binary_name: ${{ matrix.target }}
          extra_files: LICENSE README.md
          release_tag: ${{ steps.tagref.outputs.tag }}
          ldflags: -X github.com/eexit/http2smtp/internal/api.Version=${{ steps.tagref.outputs.tag }}+${{ github.sha }}
